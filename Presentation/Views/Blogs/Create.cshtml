@model Application.ViewModels.AddBlogViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>AddBlogViewModel</h4>

@if (!string.IsNullOrEmpty(ViewBag.Message) )
{
    <div class="alert alert-success" role="alert">
        @ViewBag.Message
    </div>
}

@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
    </div>
}

    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LogoImageUrl" class="control-label"></label>
                    <input type="file" class="form-control" name="logoFile" />
                    
                    <span asp-validation-for="LogoImageUrl" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label"></label>
                    <select name="CategoryId">
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
